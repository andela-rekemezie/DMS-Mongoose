#!/usr/bin/env node

var program = require('commander'),
  prettyjson = require('prettyjson'),
  DMS = require('../documentManager');
console.log(DMS);
program
  .version('0.0.1')
  .description('document system manager');

program
  .command('createUser <userName><email><firstName><lastName><role><password>')
  .description('method to create a user if it does not exist')
  .action(function(userName, email, fName, lName, role, pass) {
    DMS.createUser(userName, email, fName, lName, role, pass,
      function(err, user) {
        if (err) {
          console.log(err);
        } else {
          console.log(JSON.stringify(user));
        }
      });
  });

program
  .command('getAllUsers')
  .description('method to get all users the User table')
  .action(function() {
    DMS.getAllUsers(function(err, users) {
      if (err) {
        console.log(err);
      } else if (users.length < 1) {
        console.log('No user exist');
      } else {
        console.log(users);
      }
    });
  });

program
// use username only later
  .command('getAUser <userName>')
  .description('method to get a user')
  .action(function(userName) {
    DMS.getAUser(userName, function(err, user) {
      if (err) {
        console.log(err);
      } else if (!user) {
        console.log(userName + " does not exist");
      } else {
        console.log(JSON.stringify(user));
      }
    });
  });

program
  .command('createRole <position>')
  .description('method to create a role to Role\'s table')
  .action(function(position) {
    DMS.createRole(position, function(err, role) {
      if (err) console.log(err);
      console.log(JSON.stringify(role));
    });
  });

program
  .command('getAllRoles')
  .description('method to get all users from the Role\'s table')
  .action(function() {
    DMS.getAllRoles(function(err, roles) {
      if (err) {
        console.log(err);
      } else if (roles.length < 1) {
        console.log("No role exist in the database");
      } else {
        console.log(JSON.stringify(roles));
      }
    });
  });

program
  .command('getARole <role>')
  .description('method to get a role')
  .action(function(title) {
    DMS.getARole(title, function(err, role) {
      if (err) {
        console.log(err);
      } else if (!role) {
        console.log(role + " does not exist");
      } else {
        console.log(JSON.stringify(role));
      }
    });
  });

program
  .command('createDocument <docTitle> <accessRight>')
  .description('method to create a document in the Document table')
  .action(function(docTitle, accessRight) {
    DMS.createDocument(docTitle, accessRight, function(err, doc) {
      if (err) console.log(err);
      console.log(JSON.stringify(doc));
    });
  });

program
  .command('getAllDocuments [limit]')
  .description('method to get all documents')
  .action(function(limit) {
      DMS.getAllDocuments(limit, function(err, docs) {
          if (err) {
            console.log(err);
          } else if (docs.length < 1) {
            console.log("No document found in the database");
          } else {
            console.log(JSON.stringify(docs));
            }
          });
      });

    program
    .command('getDocByRole <role> [limit]')
    .description('method to get documents accesible by role')
    .action(function(role, limit) {
      DMS.getDocByRole(role, limit, function(err, docs) {
        if (err) {
          console.log(err);
        } else if (docs.length < 1) {
          console.log("No document found for role: " + role);
        } else {
          console.log(JSON.stringify(docs));
        }
      });
    });

    program
    .command('getDocByDate <date> [limit]')
    .description('method to get document by date')
    .action(function(date, limit) {
      DMS.getDocByDate(date, limit, function(err, docs) {
        if (err) {
          console.log(err);
        } else if (docs.length < 1) {
          console.log("No document created on " + date);
        } else {
          console.log(JSON.stringify(docs));
        }
      });
    }); program.parse(process.argv);
